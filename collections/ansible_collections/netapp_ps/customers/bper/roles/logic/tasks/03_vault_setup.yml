##########################################################################
#
# - find suitable target vault SVM for Snapmirror destination volume
# 
#
# 
# Alexey Mikhaylov
# NetApp Deutschland GmbH
# Professional Services 2024
##########################################################################
---
- name: Vault SVM finder
  block:
  - name: Set cluster credentials
    ansible.builtin.set_fact:
      auth: &auth
        username:        "{{ ontap_username | default(omit) }}"
        password:        "{{ ontap_password | default(omit) }}"
        validate_certs:  "{{ auth_rest_validate_certs | default(false) }}"
        use_rest:        always
        use_python_keys: true
    no_log: true

  - name: Get source SVM hostvars
    ansible.builtin.set_fact:
      target_svm_hostvars:  "{{ inventory_svms_mcc.hosts | selectattr('name', 'equalto', vars_local.source.svm.name) }}"
  
  - name: Check hostvars for suitable vault SVM
    ansible.builtin.assert:
      that:
        - target_svm_hostvars[0] is defined
        - target_svm_hostvars[0].vault_svm is defined
      msg: "No suitable vault SVM found for the volume {{ vars_local.source.volume.name }}"
  
   # Retrieve target vault SVM hostvar facts
  - name: Get target vault SVM hostvars
    ansible.builtin.set_fact:
      target_vault_svm_hostvars:  "{{ inventory_svms_vault.hosts | selectattr('name', 'equalto', target_svm_hostvars[0].vault_svm) }}"
    
  # Set target vault SVM vars 
  - name: Set target vault SVM facts
    ansible.builtin.set_fact:
      target_vault_svm:        "{{ target_vault_svm_hostvars[0].name }}"
      target_vault_cluster:    "{{ target_vault_svm_hostvars[0].cluster_name }}"
      target_vault_cluster_ip: "{{ target_vault_svm_hostvars[0].cluster_mgmt }}"  
  
  - debug: var=vars_local

  - name: Get available aggregates assigned vault SVM
    netapp.ontap.na_ontap_rest_info:
      <<: *auth
      hostname: "{{ target_vault_cluster_ip }}"
      gather_subset:
        - vserver_info
      fields:
        - aggregates
      parameters:
        name:            "{{ target_vault_svm }}"
    register: svm_aggregates
    when: target_vault_svm is defined
    no_log: "{{ nolog }}"

  - ansible.builtin.assert:
      that: svm_aggregates.ontap_info.svm_svms.num_records > 0
      msg: "SVM {{ target_vault_svm }} not found on cluster {{ target_vault_cluster }}. Please check the inventory file."
  - ansible.builtin.assert:
      that: svm_aggregates.ontap_info.svm_svms.records[0].aggregates | length > 0
      msg: 
        - "No aggregates found assigned for the vault SVM {{ target_vault_svm }}. Please check ONTAP cluster SVM configuration."

######## Setting source volume destination aggreate
# Collecting aggrgates available 
#######################################

  - name: Get available aggregates of given Snaplock type on vault cluster 
    netapp.ontap.na_ontap_rest_info:
      <<: *auth
      hostname: "{{ target_vault_cluster_ip }}"
      gather_subset:
        - aggregate_info
      fields:
        - name
      #parameters:
      #  snaplock_type:    "{{ '!non_snaplock' if input_snaplock | bool else vars_local.source.volume.snaplock.type }}"
    no_log: "{{ nolog }}"
    register: aggregates_supported_vault

  - set_fact: 
      aggregates_supported_vault_list: "{{ aggregates_supported_vault.ontap_info.storage_aggregates.records | map(attribute='name') | list }}"
  - debug: msg="Cluster supported aggregate list = {{ aggregates_supported_vault_list }}"
  - debug: msg="SVM assigned aggregates list     = {{ svm_aggregates.ontap_info.svm_svms.records[0].aggregates | map(attribute='name') | list }}"
  - set_fact:
      vault_svm_supported_aggregates: "{{ svm_aggregates.ontap_info.svm_svms.records[0].aggregates | map(attribute='name') | intersect(aggregates_supported_vault_list)  }}"
  - debug: msg="SVM assigned supported aggregates list = {{ vault_svm_supported_aggregates }}"
  
  # we make sure vault SVM has access to the aggregates of the requested Snaplock type
  - ansible.builtin.assert:
      that: 
        - aggregates_supported_vault_list | length > 0
        - vault_svm_supported_aggregates | length > 0
      msg: 
        - "No aggregates of requested Snaplock type found assigned for the vault SVM {{ target_vault_svm }}. Please check ONTAP cluster SVM configuration."

  - name: Define destination vault SVM - vars_local facts
    ansible.builtin.set_fact:
      vars_local_update: "{{ lookup('template', 'vars/customers/bper/templates/vault.j2') | from_yaml }}"
              
  - name: Merging logic found facts with vars_local
    ansible.builtin.set_fact:
      vars_local: "{{ vars_local | default({}) | combine(vars_local_update, recursive=true)}}"
  - debug: var=vars_local
  
  when: 
    - not (input_snaplock | bool) or (input_snaplock is not defined)
    - inventory_svms_mcc.keys() | length > 0
    - target_svm is defined
    
...